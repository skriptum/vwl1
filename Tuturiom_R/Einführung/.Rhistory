install.packages(c("haven", "tidyverse"))
Installation der Pakete
```{r}
install.packages(c("haven", "tidyverse"))
```
Laden in die Session
```
library("tidyverse")
library("haven")
```
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library("tidyverse")
string2 <- "Bye"
string1 <- "Hello"
string1 <- "Hello"
string2 <- "Bye"
mu <- "\u03BC"
mu
char_vector <- c(string1,string2, mu)
char_vector
str_length(char_vector)
string1 <- "Hello"
string2 <- "Bye"
mu <- "\u03BC" # mathematisches Zeichen mu
char_vector <- c(string1,string2, mu)
char_vector
str_c(string1,string2)
str_c(string1,string2, sep = "|")
string1 <- "Hello"
string2 <- "Bye"
mu <- "\u03BC" # mathematisches Zeichen mu
char_vector <- c(string1,string2, mu)
char_vector
str_length(char_vector)
str_c(string1,string2, sep = "|")
x <- ("apple", "banana", "pear")
x <- c("apple", "banana", "pear")
str_sub(x,1,3)
str_sub(x,start= 1,end= 2) <- str_to_upper(str_sub(x,1,2))
x
x
str_sub(x,start= 1,end= 3)
#überschreiben der 2- 4 buchstaben als Großbuchstaben
str_sub(x,start= 2,end= 4) <- str_to_upper(str_sub(x,1,4))
x
x <- c("apple", "banana", "pear")
#überschreiben der 2- 4 buchstaben als Großbuchstaben
str_sub(x,start= 2,end= 4) <- str_to_upper(str_sub(x,1,4))
x
x <- c("apple", "banana", "pears")
#überschreiben der 2- 4 buchstaben als Großbuchstaben
str_sub(x,start= 2,end= 4) <- str_to_upper(str_sub(x,1,4))
x
#überschreiben der 2- 4 buchstaben als Großbuchstaben
str_sub(x,start= 2,end= 4) <- str_to_upper(str_sub(x,2,4))
str_sub(x,start= 1,end= 3)
#überschreiben der 2- 4 buchstaben als Großbuchstaben
str_sub(x,start= 2,end= 4) <- str_to_upper(str_sub(x,2,4))
x
x <- c("apple", "banana", "pears")
str_sub(x,start= 1,end= 3)
#überschreiben der 2- 4 buchstaben als Großbuchstaben
str_sub(x,start= 2,end= 4) <- str_to_upper(str_sub(x,2,4))
x
str_sort(x, locale = "en", decreasing = T )
str_view(x, "an")
install.packages("htmlwidgets")
str_view(x, "an")
stringr::str_view(x, "an")
stringr::str_view(x, pattern = "an")
str_view(x, pattern = "an")
str_view(example, pattern = "an")
example <- "mexicana"
str_view(example, pattern = "an")
str_view(x, pattern = "A")
str_view(x, pattern = "A")
str_view(x, pattern = "A")
str_view(x, pattern = "A")
?str_detect()
words
words[str_detect(words, "xy")]
words[str_detect(words, "x")]
dim(words)
length(words)
words[str_detect(words, "^m")]
words[str_detect(words, "[aeiou]$")] # wörter mit vokal am ende
sum(str_detect(words, "[aeiou]$")) # wörter mit vokal am ende
words[str_detect(words, "^m")] # alle wörter die mit m anfangen
sum(str_detect(words, "[aeiou]$")) # wörter mit vokal am ende
words[str_detect(words, "[aeiou")]
words[str_detect(words, "[aeiou]")]
words[!str_detect(words, "[aeiou]")]
words[str_detect(words, "^ma")] # alle wörter die mit m anfangen
sum(str_detect(words, "[aeiou]$")) # wörter mit vokal am ende
words[!str_detect(words, "[aeiou]")] #wörter ohne vokal
words[str_detect(words, "^xe")] # alle wörter die mit m anfangen
words[str_detect(words, "^x")] # alle wörter die mit m anfangen
words[str_detect(words, "^y")] # alle wörter die mit m anfangen
sum(str_detect(words, "[aeiou]$")) # wörter mit vokal am ende
words[!str_detect(words, "[aeiou]")] #wörter ohne vokal
words[str_detect(words, "^y")] # alle wörter die mit m anfangen
sum(str_detect(words, "[aeiou]$")) # wörter mit vokal am ende
words[!str_detect(words, "[aeiou]")] #wörter ohne vokal
str_count(words, "abe")
str_count(words, "ab")
words[str_count(words, "ab")]
mean(str_count(words, "ab"))
mean(str_count(words, "a"))
mean(str_count(words, "[aeiou]")) #anteil wörter mit a drin
df <- tibble(word = words, i = seq_along(word)
)
df
df <- tibble(word = words, i = seq_along(word))
df <- tibble(word = words, i = seq_along(word))
head(df)
df %>%
mutate(vokale = str_count(word, "[aeiou]"), konsonanten = str_count(word, "[^aeiou]"))
?sentences
ban <- c("Banana", "banana", "BANANA")
bananas %>%
str_view(regex("banana"))
ban <- c("Banana", "banana", "BANANA")
ban %>%
str_view(regex("banana"))
ban <- c("Banana", "banana", "BANANA")
ban %>%
str_view(regex("banana"),ignore_case = T)
ban <- c("Banana", "banana", "BANANA")
ban %>%
str_view(regex("banana"), ignore_case = T)
?str_view
ban <- c("Banana", "banana", "BANANA")
ban %>%
str_view(regex("banana"))
remotes::install_github("ThinkR-open/remedy")
library("remotes")
install.packages("remotes")
remotes::install_github("ThinkR-open/remedy")
remotes::install_github("ThinkR-open/remedy")
knitr::opts_chunk$set(echo = TRUE)
library(forcats)
library(tidyverse)
# library(forcats)
string <- c("Dez", "Jan", "Feb", "Apr")
sort(string)
?factor
faktor <- factor(string, monate_level)
monate_level <- c(
"Jan", "Feb", "Mär", "Apr", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"
)
faktor <- factor(string, monate_level)
faktor
sort(faktor)
gss_cat
gss_cat %>%
count(race)
gss_cat
gss_cat %>%
count(race)
relig <- gss_cat %>%
group_by(relig) %>%
summarize(avg_age = mean(age, na.rm=T))
relig <- gss_cat %>%
group_by(relig) %>%
summarize(avg_age = mean(age, na.rm=T))
relig
relig <- gss_cat %>%
group_by(relig) %>%
summarize(
avg_age = mean(age, na.rm=T),
avg_tvhours = mena(tv_hours, na.rm = T),
n = n(),
)
relig <- gss_cat %>%
group_by(relig) %>%
summarize(
avg_age = mean(age, na.rm=T),
avg_tvhours = mean(tv_hours, na.rm = T),
n = n(),
)
relig <- gss_cat %>%
group_by(relig) %>%
summarize(
avg_age = mean(age, na.rm=T),
avg_income = mean(rincome, na.rm = T),
n = n(),
)
relig
relig <- gss_cat %>%
group_by(relig) %>%
summarize(
avg_age = mean(age, na.rm=T),
avg_tv = mean(tvhours, na.rm = T),
n = n(),
)
relig
ggplot(relig, aes(avg_tv, relig)) +
geom_point()
ggplot(relig, aes(avg_tv, fct_reorder(relig, avg_tv)) +
geom_point()
ggplot(relig, aes(avg_tv, fct_reorder(relig, avg_tv)) +
geom_point()
ggplot(relig, aes(avg_tv, fct_reorder(relig, avg_tv))) +
geom_point()
gss_cat
count(gss_cat,partyid)
count(gss_cat,relig)
count(gss_cat,race)
gss_cat %>%
mutate(race= fct_recode(partyid,
"Anders": "Other",
"Weiß" : "White",
"Schwarz" : "Black"
))
gss_cat %>%
mutate(race= fct_recode(race,
"Anders": "Other",
"Weiß" : "White",
"Schwarz" : "Black"
))
gss_cat %>%
mutate(race = fct_recode(race,
"Anders"= "Other",
"Weiß" = "White",
"Schwarz" = "Black"
))
gss_cat %>%
mutate(race = fct_recode(race,
"Anders"= "Other",
"Weiß" = "White",
"Schwarz" = "Black"
))
?fct_lump
library(tidyverse)
library(tidyverse)
library(lubridate)
```{r echo=FALSE}
```{r, echo=FALSE}
library(tidyverse)
library(lubridate)
now()
today()
now()
today()
time()
time(21)
?time
today()
now()
today()
ymd("14ter September 2024")
ymd("14th September 2024")
dym("14th September 2024")
dmy("14th September 2024")
ymd("2021, Dezember, 21")
ymd("2021, December, 21")
mdy(122108)
dmy("14th September 2024")
ymd("2021, December, 21")
mdy(122108)
ymd_hms("21 September 08 13:54:33")
flights
library(nycflights13)
flights
head(flights)
flights %>%
dplyr::select(year,month, day, hour, minute)
head(flights)
flights %>%
dplyr::select(year,month, day, hour, minute)
library(nycflights13)
head(flights)
flights %>%
dplyr::select(year,month, day, hour, minute) %>%
mutate(
departure = make_datetime(year, month, day, hour, minute),
date = make_date(year,month,day)
)
as_datetime(today())
typeof(x <- today())
typeof(as_datetime(x))
mode(x)
today()
as_datetime(today())
datetime <- ymd_hms("20200914 151623")
datetime
month(datetime)
wday(datetime)
yday(datetime)
?wday
as_datetime(today())
wday(as_datetime(today()))
#ausgabe wochentag mit Parameter Montag als Anfang
wday(datetime, week_start = getOption("lubridate.week.start" = 1))
#ausgabe wochentag mit Parameter Montag als Anfang
wday(datetime, week_start = getOption("lubridate.week.start" , 1))
#ausgabe wochentag mit Parameter Montag als Anfang
wday(datetime, week_start = getOption("lubridate.week.start" , 1), label = T)  #ein montag
?wday
load("~/Nextcloud/vwl1/Tuturiom_R/Einführung/data/starwars.RData")
setwd("~/Nextcloud/vwl1/Tuturiom_R/Einführung")
load("~/Nextcloud/vwl1/Tuturiom_R/Einführung/data/starwars.RData")
load("data/starwars.RData")
starwars
starwars %>%
dplyr::select(hair_color, skin_color, eye_color)
starwars %>%
dplyr::select(hair_color, skin_color, eye_color) %>%
summarize()
starwars %>%
dplyr::select(hair_color, skin_color, eye_color) %>%
summarize(
h_length = str_length(hair),
s_length = str_length(skin_color)
)
starwars %>%
dplyr::select(hair_color, skin_color, eye_color) %>%
summarize(
h_length = str_length(hair_color),
s_length = str_length(skin_color)
)
starwars %>%
dplyr::select(hair_color, skin_color, eye_color) %>%
summarize(
h_length = mean(str_length(hair_color)),
s_length = mean(str_length(skin_color))
)
starwars %>%
dplyr::select(hair_color, skin_color, eye_color) %>%
summarize(
h_length = mean(str_length(hair_color), na.rm = T),
s_length = mean(str_length(skin_color))
)
starwars %>%
dplyr::select(hair_color, skin_color, eye_color) %>%
summarize(
h_length = mean(str_length(hair_color), na.rm = T),
s_length = mean(str_length(skin_color), na.rm = T)
)
starwars %>%
dplyr::select(hair_color, skin_color, eye_color) %>%
summarize(
h_length = mean(str_length(hair_color), na.rm = T),
s_length = mean(str_length(skin_color), na.rm = T),
e_length = mean(str_length(eye_color), na.rm = T),
h_sd= sd(str_length(hair_color), na.rm = T),
s_sd = sd(str_length(skin_color), na.rm = T),
e_sd = sd(str_length(eye_color), na.rm = T),
)
starwars %>%
mutate(hair_color = str_c(hair_color, "hair_color:"))
starwars %>%
mutate(hair_color = str_c("hair_color", hair_color, sep = ":"))
starwars %>%
unite(hair_color, eye_color, sep = "and")
starwars %>%
unite(hair_color, eye_color, sep = "and", col="combined")
starwars %>%
unite(hair_color, eye_color, sep = " and ", col="combined")
starwars %>%
mutate(combined2 = str_c(hair_color,eye_color, sep = " and "))
starwars %>%
unite(hair_color, eye_color, sep = " and ", col="combined")
starwars %>%
mutate(combined2 = str_c(hair_color,eye_color, sep = " and "))
starwars %>%
mutate(short_hair = str_sub(hair_color, end = 3))
starwars %>%
mutate(short_hair = str_sub(hair_color, end = 2))
starwars %>%
mutate(star_string = str_c(name, hair_color, eye_color,
skin_color, homeworld, films, vehicles, starships))
starwars %>%
mutate(star_string = str_c(name, hair_color, eye_color,
skin_color, homeworld, films, vehicles, starships, sep = " "))
starwars %>%
mutate(star_string = str_c(name, hair_color, eye_color,
skin_color, homeworld, films, vehicles, starships, sep = ", "))
starwars %>%
mutate(
star_string = str_c(name, hair_color, eye_color, skin_color, homeworld, films, vehicles, starships, sep = ", "),
films_low = str_to_lower(films),
)
starwars %>%
str_sort(films)
str_sort(starwars$films)
```{r,echo = False}
```{r echo = False}
```{r echo = FALSE}
```{r}
str_sort(starwars$films)
```{r, echo=FALSE}
```{r}
str_sort(starwars$films)
str_sort(starwars$films)
str_sort(starwars$films)
str_sort(starwars$films)
str_sort(starwars$films)
starwars$films
str(starwars$films)
str(starwars$films[1])
str_sort(starwars$films[1])
str_sort(starwars$films[1:2])
str_flatten(starwars$films[1])
str_flatten(starwars$films[1], collapes = ":")
str_flatten(starwars$films[1], collapse = ":")
starwars$films [1]
```{r, echo= FALSE}
str_sort(starwars$films)
